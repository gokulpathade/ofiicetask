package com.rolebasejwttoken.model;

import java.security.Permission;
import java.util.Arrays;
import java.util.Collections;

//import antlr.collections.List;
import java.util.List;

public enum Role {
	   ADMIN,
	   FIELDENGINEER,
       PRINCEPALENGINEER,
   
       

       public List<Permission> getPermissions() {
           // Implement logic to return permissions based on the role
           switch (this) {
               case FIELDENGINEER:
                   return Arrays.asList(Permission.READ);
               case ADMIN:
                   return Arrays.asList(Permission.READ, Permission.WRITE);
               // Add more cases if needed

               default:
                   return Collections.emptyList();
           }
       }  
       
       
}
       
       
       
       
       
       
       
       
//	    @ManyToOne
//	    @JoinColumn(name = "user_id") // adjust the column name accordingly
//	    private User user;
//	    
	    
//	    @ManyToMany(cascade = CascadeType.ALL)
////	    @ManyToOne
//		@JoinColumn(name = "userid")
//		// name should match the actual column name in your database
//		private User user;

//    @Override
//    public String getAuthority() {
//        return role;
//    }
//}
